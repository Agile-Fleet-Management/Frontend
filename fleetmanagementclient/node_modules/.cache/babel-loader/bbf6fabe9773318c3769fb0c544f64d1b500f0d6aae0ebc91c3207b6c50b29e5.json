{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yassine\\\\Documents\\\\Spring 2024\\\\Agile\\\\Frontend\\\\fleetmanagementclient\\\\src\\\\Analytics\\\\Vehiclecount.jsx\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Vehiclecount = () => {\n  // Assuming each vehicle has a current usage value and a total value.\n  const vehicleData = {\n    cars: {\n      current: 3,\n      total: 8\n    },\n    trucks: {\n      current: 6,\n      total: 15\n    },\n    suvs: {\n      current: 2,\n      total: 9\n    }\n  };\n\n  // Generate background colors for each vehicle type.\n  const backgroundColors = {\n    cars: 'rgba(255, 99, 132, 0.5)',\n    trucks: 'rgba(54, 162, 235, 0.5)',\n    suvs: 'rgba(255, 206, 86, 0.5)'\n  };\n\n  // Build datasets for the used and remaining capacities.\n  const datasets = [{\n    label: 'Current',\n    data: Object.values(vehicleData).map(v => v.current),\n    backgroundColor: Object.keys(vehicleData).map(v => backgroundColors[v])\n  }, {\n    label: 'Total',\n    data: Object.values(vehicleData).map(v => v.total - v.current),\n    backgroundColor: 'rgba(200, 200, 200, 0.5)'\n  }];\n  const data = {\n    labels: Object.keys(vehicleData),\n    datasets: datasets\n  };\n  const options = {\n    indexAxis: 'y',\n    scales: {\n      x: {\n        stacked: true,\n        display: false // Hides the x-axis labels\n      },\n      y: {\n        stacked: true\n      }\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: 'Number of Vehicles Used' // Replace with your actual title\n      },\n      legend: {\n        display: false // Hide legend\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.x !== null) {\n              label += context.parsed.x;\n            }\n            return label;\n          }\n        }\n      }\n    },\n    maintainAspectRatio: false,\n    responsive: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '340px',\n      height: '250px',\n      backgroundColor: '#f0f0f0',\n      padding: '20px',\n      borderRadius: '10px',\n      boxShadow: '0px 10px 15px -3px rgba(0, 0, 0, 0.1), 0px 4px 6px -2px rgba(0, 0, 0, 0.05)'\n    },\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n};\n_c = Vehiclecount;\nexport default Vehiclecount;\nvar _c;\n$RefreshReg$(_c, \"Vehiclecount\");","map":{"version":3,"names":["React","Bar","jsxDEV","_jsxDEV","Vehiclecount","vehicleData","cars","current","total","trucks","suvs","backgroundColors","datasets","label","data","Object","values","map","v","backgroundColor","keys","labels","options","indexAxis","scales","x","stacked","display","y","plugins","title","text","legend","tooltip","callbacks","context","dataset","parsed","maintainAspectRatio","responsive","style","width","height","padding","borderRadius","boxShadow","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yassine/Documents/Spring 2024/Agile/Frontend/fleetmanagementclient/src/Analytics/Vehiclecount.jsx"],"sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nconst Vehiclecount = () => {\n  // Assuming each vehicle has a current usage value and a total value.\n  const vehicleData = {\n    cars: { current: 3, total: 8 },\n    trucks: { current: 6, total: 15 },\n    suvs: { current: 2, total: 9 },\n  };\n\n  // Generate background colors for each vehicle type.\n  const backgroundColors = {\n    cars: 'rgba(255, 99, 132, 0.5)',\n    trucks: 'rgba(54, 162, 235, 0.5)',\n    suvs: 'rgba(255, 206, 86, 0.5)',\n  };\n\n  // Build datasets for the used and remaining capacities.\n  const datasets = [\n    {\n      label: 'Current',\n      data: Object.values(vehicleData).map(v => v.current),\n      backgroundColor: Object.keys(vehicleData).map(v => backgroundColors[v]),\n    },\n    {\n      label: 'Total',\n      data: Object.values(vehicleData).map(v => v.total - v.current),\n      backgroundColor: 'rgba(200, 200, 200, 0.5)',\n    },\n  ];\n\n  const data = {\n    labels: Object.keys(vehicleData),\n    datasets: datasets,\n  };\n\n  const options = {\n    indexAxis: 'y',\n    scales: {\n      x: {\n        stacked: true,\n        display: false, // Hides the x-axis labels\n      },\n      y: {\n        stacked: true,\n      }\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: 'Number of Vehicles Used', // Replace with your actual title\n      },\n      legend: {\n        display: false, // Hide legend\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.x !== null) {\n              label += context.parsed.x;\n            }\n            return label;\n          }\n        }\n      }\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n  };\n\nreturn (\n  <div style={{ \n    width: '340px', \n    height: '250px', \n    backgroundColor: '#f0f0f0', \n    padding: '20px', \n    borderRadius: '10px', \n    boxShadow: '0px 10px 15px -3px rgba(0, 0, 0, 0.1), 0px 4px 6px -2px rgba(0, 0, 0, 0.05)'\n  }}>\n    <Bar data={data} options={options} />\n  </div>\n);\n};\n\nexport default Vehiclecount;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}